name: build-catalogs

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      args:
        description: 'Gradle args for `build` step'
        default: ''
        required: false

env:
  OSS_USER: '${{ secrets.OSS_USER }}'
  OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
  OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'

jobs:
  build-catalogs:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 15
      matrix:
        range:
          - from: c
            to: c
          - from: o
            to: o
          - from: i
            to: i
          - from: a
            to: b
          - from: d
            to: h
          - from: j
            to: n
          - from: p
            to: z

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Generate Kotlin libraries catalogs
        run: ./gradlew mavenScan --repository=mavenCentral --from=${{ matrix.range.from }} --to=${{ matrix.range.to }}

      - name: Upload catalogs
        uses: actions/upload-artifact@v2
        with:
          name: catalogs-${{ matrix.range.from }}-${{ matrix.range.to }}
          path: build/catalogs

      - name: Stop Gradle daemons
        run: ./gradlew --stop


  publish-catalogs:
    runs-on: ubuntu-latest

    needs: build-catalogs

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Download catalogs
        uses: actions/download-artifact@v2
        with:
          path: build/catalogs

      - name: Increment version
        run: ./gradlew reckonTagCreate -P"reckon.stage"="final"

      - name: Gradle build
        if: ${{ always() }}
        run: ./gradlew build ${{ github.event.inputs.args }} -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Generate code analysis reports
        if: ${{ always() }}
        run: ./gradlew detekt -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Upload code analysis reports
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'build/reports/detekt/detekt.sarif'

      - name: Generate docs
        run: ./gradlew buildDocs -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Publish a snapshot
        env:
          ossUser: ${{ secrets.OSS_USER }}
          ossToken: ${{ secrets.OSS_TOKEN }}
        run: ./gradlew publishToSonatype -P"reckon.stage"="snapshot" -P"reckon.scope"="patch"

      - name: Deploy snapshot docs to Github Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          target-folder: 'snapshot'
          branch: 'gh-pages'
          folder: 'build/dokka'
          clean: false
          single-commit: true

      - name: Stop Gradle daemons
        run: ./gradlew --stop
