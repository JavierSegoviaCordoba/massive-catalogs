name: build-catalogs

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      args:
        description: 'Gradle args for `build` step'
        default: ''
        required: false

env:
  OSS_USER: '${{ secrets.OSS_USER }}'
  OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
  OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'
  SIGNING_KEY_NAME: '${{ secrets.SIGNING_KEY_NAME }}'
  SIGNING_KEY_ID: '${{ secrets.SIGNING_KEY_ID }}'
  SIGNING_KEY_PASSPHRASE: '${{ secrets.SIGNING_KEY_PASSPHRASE }}'
  SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'
  GRADLE_PUBLISH_KEY: '${{ secrets.GRADLE_PUBLISH_KEY }}'
  GRADLE_PUBLISH_SECRET: '${{ secrets.GRADLE_PUBLISH_SECRET }}'

jobs:
  build-catalogs:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 15
      matrix:
        range:
          - from: c
            to: c
          - from: o
            to: o
          - from: i
            to: i
          - from: a
            to: b
          - from: d
            to: h
          - from: j
            to: n
          - from: p
            to: z

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Generate Kotlin libraries catalogs
        run: ./gradlew mavenScan --repository=mavenCentral --from=${{ matrix.range.from }} --to=${{ matrix.range.to }}

      - name: Upload catalogs
        uses: actions/upload-artifact@v3
        with:
          name: catalogs-${{ matrix.range.from }}-${{ matrix.range.to }}
          path: build/catalogs

      - name: Upload catalogs
        uses: actions/upload-artifact@v3
        with:
          name: catalogs-${{ matrix.range.from }}-${{ matrix.range.to }}
          path: build/catalogs

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  publish-catalogs:
    runs-on: ubuntu-latest

    needs: build-catalogs

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Download catalogs
        uses: actions/download-artifact@v3
        with:
          path: build/catalogs

      - name: Generate Kotlin Catalog
        if: ${{ always() }}
        run: ./gradlew generateKotlinCatalog

      - name: Gradle build
        if: ${{ always() }}
        run: ./gradlew build ${{ github.event.inputs.args }} "-Psemver.stage=snapshot"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_KEY_PASSPHRASE }}

      - name: Publish a release
        run: ./gradlew publishToSonatype "-Psemver.stage=snapshot"

      - name: Stop Gradle daemons
        run: ./gradlew --stop
